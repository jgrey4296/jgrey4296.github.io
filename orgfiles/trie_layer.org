* TODO [[~/.spacemacs.d/layers/trie][Trie-layer]]
  [[file:~/github/writing/orgfiles/institution_pipeline.org::*Institution%20Pipeline%20Concept][Institution Pipeline Concept]]
** Components
*** Emacs Components
**** Pipelang Mode
     For Writing Institutions.
     Can trigger [[file:base_agenda.org::*Rule%20Writing%20Mode%20(RWM)][RWM]] and [[file:base_agenda.org::*Explore%20Mode%20(EM)][EM]]
     Based on Org Mode, embeds elements in src blocks using ob-DSLs.
     Has tests and auto-verification.
     Compiles to a specification to load into [[file:base_agenda.org::*Python%20Pipeline%20Trie%20Architecture%20(PPTA)][PPTA]].
     Can provide statistics on tags, rules etc.
     Provides helms for selecting typologies (Curves, enums, languages)
     Connects with [[file:base_agenda.org::*Python%20Pipeline%20Trie%20Architecture%20(PPTA)][PPTA]] to run (Unit/Situation/Sandbox) tests. ([[file:~/github/writing/orgfiles/threeIdeas.org::*Observational%20Modalities][Observational Modalities]])
     Look at [[file:~/github/writing/orgfiles/threeIdeas.org::*Authoring%20Modalities][Authoring Modalities]] especially *Guard*
**** Rule Writing Mode (RWM)
     For writing rules.
     Keeps track of All/Institution rule groups.
     Triggers [[file:base_agenda.org::*Trie%20Mode%20(TM)][TM]] when writing sentences
     Triggers [[file:base_agenda.org::*Sequence%20Mode%20(SM)][SM]] for rule relations and patterns
***** Trie Mode (TM)
      For writing trie sentences.
      should provide helms for global/local completion. (capable of handling variables)
***** Sequence Mode (SM)
      To Help write sequences of related rule facts, and patterns.
      Also defines sources and sinks.
      | [a b] c | d, e | etc
**** Input/Output Mode
     Link Sequence mode, but focusing on a single node
     at a time. For Rules, layers, languages(+artifacts) and institutions.
**** Explore Mode (EM)
     To Explore the Trie graphically
     Add DFS count of leaves at each depth
***** Tag Worker (TW)
      For working with groups of items sharing a tag.
      As everything will be described as Tries, should be able to show shared
      elements.
**** Activity Editor
     to connect tools/artifacts and tasks?
     Assign different [[file:~/github/cairo_pipeline/institution.org::*Action%20Notations][Action Notations]] and indeterminacy

***** IGU Transforms definiitons                                                :META:
      Specify how to transform actions / activities
      for IGU [[file:~/github/cairo_pipeline/institution.org::*Governance%20Specifics][Division Of Labour]], [[file:~/github/cairo_pipeline/institution.org::*Delegational%20/%20Division%20of%20Labour][Delegational / Division of Labour]]
      *These Transforms are Key*. They

**** Timing Comparison
*** Secondary
**** Logic Layer (Prolog, Clingo, CCalc... InstAL?)
     For calculating / verifying elements
**** Music Layer (SCLang, Tidal)
     For producing performances
**** jg_twitter
     For producing performances
**** org_unit
     For Testing specifications
*** Non-Emacs Components
**** Python Pipeline Trie Architecture (PPTA)
     Where the specified institutions run.
**** Supercollider Sampler instrument with auto-wget
     For Soundscapes
**** Cairo Images
***** City Plan
**** Street
**** Unity-Vault
**** Organisation games (Shadow of Mordor-a-like)
**** Newspaper
** Design
*** Vignettes
*** Architecture
** Layouts
*** Pipeline
*** Flattened Trie Location
*** Rule
*** Time Cycle
*** Carriers
**** Activity
**** Tool
**** Values
**** Role
**** Sanctions
** Keybindings
*** Insertion
*** Deletion
** Transient States
*** Component Adding
**** Institution
**** Activity
**** Meta Rules
*** Component Navigation
** Layer elements
*** Configuration
** Mode Elements
*** font locking?
    Possibly do manually?
*** Keywords
** Functions
*** Helms
**** Factbase Helm
**** Tagging Helm
**** Rule Helm
**** Curve Selection
*** Expand-Region implementation
*** connection to runtime
*** Parsec implementation
*** working directory loading
*** Use checking
*** Type Checking
*** Source / Sink Checking
** Snippets
*** Rule
*** Activity Pyramid
*** Layer
*** Cycle
** Questions Options Criteria
