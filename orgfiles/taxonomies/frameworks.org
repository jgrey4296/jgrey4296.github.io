#+TITLE: Frameworks

* Overview

* Main
*** 2APL
*** 2OPL
*** 3APL
*** ACT-IF
*** ADICO
*** ADICO
*** AGRE
*** ANTLR
*** BDI
*** BOD
*** BOID
*** BORG
*** C Plus
*** CADIA Populus
*** CArtAgO
*** CBR
*** DESIRE
Brazier 1997
*** DETT
*** DReAM
*** FAtiMA
*** FFIPS
*** FIPA
*** FSM
*** GAIA
Wooldridge 2000
*** garbage can model
*** HTN
*** IAD
*** KQML
*** L.I.A.R
*** MAPL
*** Markov Models
*** MASSIVE
Lind 2001
*** MHP
*** MOISE
cite:Hubner2002 (see for good diagram, page 2)

Multiple specifications:
1) Organizational Structure
2) Functional Structure
   - Missions and plans
   - Uses a social scheme / goal decomposition tree
     -
3) Deontic Structure
   - Permissions
   - Obligations
   - Prohibitions
4) Structural Specification
   - Individual level roles
   - Social level links
   - Collective level compatibility constraints
*** MONAD
*** Netlogo
*** OperA

"An Opera model can be thought of as a kind of abstract protocol that
governs how member agents should act according to social requirements."

[[*Logic for Contract Representation][Logic for Contract Representation]]

Distinguishes between mechanisms describing structure and global behaviour,
and mechanisms for aims and behaviour of agents.


Three main models:
1) (OM) Organizational model
   - (SS) Social Structure (Objectives, roles, coordination model)
   - (IS) Interaction Structure (interaction moments, scripts, tasks, partial ordering of scene scripts)
   - (NS) Normative Structure (role and interaction norms)
   - (CS) Communicative Structure (domain and communication ontologies)
2) (SM) Social model
   - Social Contracts
   - (REA) Role-Enacting Agent definitions
3) (IM) Interaction model
   - Concrete interaction scenes
   - Dynamic instantiation



Transitions:
1) All Targets
2) Some Targets
3) One target
4) New target
5) All Sources
6) Some Sources
7) One Source

   cite:Dignum2004 page 101 defines compatibility and consistency
   page 111 has a model overview of Opera.

   cite:Dignum2004 page 99:
   |             | Role            | Role                  | Role              |
   |             | Objectives      | Sub-Objectives        | Norms             |
   |-------------+-----------------+-----------------------+-------------------|
   | Agent Goals | obj < goals     | sub-obj support goals | norms limit goals |
   |             | obj!            | sub-obj improve goals | norms add goals   |
   |             | goals > obj     | sub-obj limit goals   |                   |
   |             | goals!          |                       |                   |
   |-------------+-----------------+-----------------------+-------------------|
   | Agent Plans | plans help objs | sub-obj > plans       | norms alter plans |
   |             |                 | sub-objs!             |                   |
   |             |                 | plans > sub-obj       |                   |
   |             |                 | plans!               |                   |

   cite:Dignum2004 page 153 : contract lifecycle
   Discovery -> Negotiation -> Execution -> Executed -> Fulfilled
   -> Failure     -> Failure   -> Cancelled-> Rejected

   cite:Dignum2004 page 162 : syntax of OperA

   cite:Dignum2004 page 198 has *interaction* structures.
*** ORA4MAS
*** PDDL
*** Petri Nets
*** PIM
*** Prometheus
cite:padgham2002prometheus,padgham2005tool,abushark2016requirements,ionita2016using

Three phase design methodology:
1) System specification phase
   - Focus on identifying basic functionality
   - Inputs / Outputs
   - shared data sources
2) Architectural design phase
   - Determine agents and interactions
3) Detailed design phase
   - Agent internals

*** QUEST
*** ROADMAP
*** SCIFF
*** Scythe
*** SODA
Omicini 2001
*** STRIPS
*** TOGA
*** Tracery
*** UML
*** VIATRA

* Links
