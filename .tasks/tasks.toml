[tasks]

[[tasks.reports]]
name         = "bibtex"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Provide stats about the bibliography"]
runs-after   = ["actionCheck::preTask"]
actions      = []

[[tasks.report]]
name         = "bookmarks"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Report about html bookmarks"]
runs-after   = ["actionCheck::preTask"]
actions      = []

[[tasks.report]]
name         = "tags"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Report about tags across all file types: bibtex, bookmark, orgs"]
runs-after   = ["actionCheck::preTask"]
actions      = []


[[tasks.lint]]
name         = "bibtex"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Lint and format the bibliography"]
runs-after   = ["actionCheck::preTask"]
actions      = []


[[tasks.lint]]
name         = "library"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Lint and clean the library directory layout and filenames"]
runs-after   = ["actionCheck::preTask"]
actions      = []

[[tasks.lint]]
name         = "bookmarks"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Lint and clean the bookmarks file"]
runs-after   = ["actionCheck::preTask"]
actions      = []

[[tasks.update]]
name         = "library"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Import firefox bookmarks into the bookmark file"]
runs-after   = ["actionCheck::preTask"]
actions      = []

[[tasks.lint]]
name         = "tags"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Lint and do replacements of mispelled tags in all available files: bibtex, bookmarks, org"]
runs-after   = ["actionCheck::preTask"]
actions      = []

[[tasks.update]]
name         = "bibtex.stubs"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Generate stub entries for pdfs/epubs in dropbox and downloads"]
runs-after   = ["actionCheck::preTask"]
actions      = []

[[tasks.update]]
name         = "tags"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Update the tag indices"]
runs-after   = ["actionCheck::preTask"]
actions      = []

[[tasks.web]]
name         = "build"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["Run the pelican build"]
runs-after   = ["actionCheck::preTask"]
actions      = []

[[tasks.web]]
name         = "serve"
print_level  = "INFO"
ctor         = "doot.task.base_task:DootTask"
doc          = ["run the local server for the pelican website "]
runs-after   = ["actionCheck::preTask"]
actions      = []
